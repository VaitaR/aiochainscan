"""
Chain registry and provider factory for blockchain scanner APIs.

This module provides a unified interface for creating scanner clients across
different blockchain networks and API providers.

AUTOMATICALLY GENERATED by scripts/generate_chains.py
Do not edit manually. Run: python scripts/generate_chains.py
"""

from __future__ import annotations

import os
from dataclasses import dataclass, field
from enum import IntEnum
from pathlib import Path


def _load_env_file_if_exists() -> None:
    """
    Load environment variables from .env file if it exists.

    Searches for .env in:
    1. Current working directory
    2. Project root (where this file is located)
    """
    # Try current working directory first
    cwd_env = Path.cwd() / '.env'
    if cwd_env.exists():
        _load_env_file(cwd_env)
        return

    # Try project root (2 levels up from this file)
    project_root = Path(__file__).parent.parent
    project_env = project_root / '.env'
    if project_env.exists():
        _load_env_file(project_env)


def _load_env_file(env_file: Path) -> None:
    """Load variables from a specific .env file."""
    try:
        with open(env_file) as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith('#') and '=' in line:
                    key, value = line.split('=', 1)
                    key = key.strip()
                    value = value.strip().strip('"\'')

                    # Only set if not already set in environment
                    if key not in os.environ:
                        os.environ[key] = value
    except Exception:
        # Silently ignore errors - .env is optional
        pass


# Load .env file on module import
_load_env_file_if_exists()


@dataclass(frozen=True)
class ChainInfo:
    """
    Canonical chain information.

    Stores all metadata about a blockchain network and provider-specific
    mappings for API access.
    """

    chain_id: int
    """EIP-155 chain ID"""

    name: str
    """Canonical chain name (lowercase, e.g., 'ethereum', 'bsc')"""

    display_name: str
    """Human-readable display name"""

    aliases: frozenset[str] = field(default_factory=frozenset)
    """Alternative names for this chain (eth, mainnet, etc.)"""

    native_currency: str = 'ETH'
    """Native currency symbol"""

    testnet: bool = False
    """Whether this is a testnet"""

    # Provider-specific mappings
    etherscan_network_name: str | None = None
    """Network name for Etherscan API (main, goerli, sepolia, etc.)"""

    blockscout_instance: str | None = None
    """BlockScout instance domain (e.g., 'eth.blockscout.com')"""

    moralis_chain_id: str | None = None
    """Moralis hex chain ID (e.g., '0x1')"""

    etherscan_api_kind: str | None = None
    """Legacy api_kind for UrlBuilder compatibility"""

    def __post_init__(self) -> None:
        """Validate chain info after initialization."""
        if not self.name:
            raise ValueError('Chain name cannot be empty')
        if self.chain_id <= 0:
            raise ValueError(f'Invalid chain ID: {self.chain_id}')


class Chain(IntEnum):
    """
    Enum of supported blockchain networks for type-safe chain selection.

    Values are EIP-155 chain IDs.
    """

    # Ethereum networks
    ETHEREUM = 1
    ROP = 3
    RIN = 4
    GOERLI = 5
    HOLESKY = 17000
    SEPOLIA = 11155111

    # Layer 2 networks
    OPTIMISM = 10
    OPTIMISM_GOERLI = 420
    MODESEP = 919
    POLYGON_ZKEVM = 1101
    POLYGON_ZKEVM_CARDONA = 2442
    BASE = 8453
    MODE = 34443
    ARBITRUM_ONE = 42161
    LINEA_GOERLI = 59140
    LINEA_SEPOLIA = 59141
    LINEA = 59144
    BLAST = 81457
    BASE_GOERLI = 84531
    BASE_SEPOLIA = 84532
    ARB_RINKEBY = 421611
    ARBITRUM_GOERLI = 421613
    ARBITRUM_SEPOLIA = 421614
    SCROLL_SEPOLIA = 534351
    SCROLL = 534352
    OPTIMISM_SEPOLIA = 11155420
    BLAST_SEPOLIA = 168587773

    # BNB Smart Chain networks
    BSC = 56
    BSC_TESTNET = 97
    OBNBT = 5611

    # Polygon networks
    POLYGON = 137
    POLYGON_MUMBAI = 80001
    POLYGON_AMOY = 80002

    # Other EVM networks
    RSK = 30
    ETC = 61
    METC = 63
    OKOV = 69
    SPOA = 77
    POA = 99
    GNOSIS = 100
    UNICHAIN = 130
    RLC = 134
    DFIO_META_MAIN = 138
    HSK = 177
    AOX = 200
    PROM = 227
    TACCHAIN_239_1 = 239
    FANTOM = 250
    KROMA = 255
    SDN = 336
    ASTR = 592
    MACA = 595
    TKAR = 596
    TACA = 597
    KAR = 686
    ACA = 787
    HAUST = 938
    LISK = 1135
    UNICHAIN_SEP = 1301
    ATL = 1338
    ELY = 1339
    INJECTIVE_TESTNET = 1439
    INJECTIVE = 1776
    VERIFY_TESTNET = 1833
    SONEIUM = 1868
    SONEIUM_MINATO = 1946
    OLYM = 2340
    DEPRECATED_KROMA_SEPOLIA = 2357
    KROMA_SEPOLIA = 2358
    ATLA = 2440
    K_LAOS = 2718
    FANTOM_TESTNET = 4002
    LISKSEP = 4202
    M = 4352
    TANGO = 5678
    LAOSNETWORK = 6283
    CONNEXT_SEPOLIA = 6398
    ZETACHAIN_TESTNET = 7001
    THAT = 8428
    GNOSIS_CHIADO = 10200
    EVENTUM_TESTNET = 16182
    UNREAL_OLD = 18231
    UNREAL = 18233
    EXPCHAIN = 18880
    ZYTRON_LINEA_TESTNET = 19546
    FLUENT_DEV_NET = 20993
    KLAOSNOVA = 27181
    OBGOR = 28528
    WPAY = 31415
    ZIL = 32769
    ZIL_TESTNET = 33101
    EDU_CHAIN = 41923
    CELO = 42220
    AVALANCHE_FUJI = 43113
    AVALANCHE = 43114
    FORM = 43521
    REDDIO = 50342
    DFLY = 78281
    MANTIS = 96970
    STABILITYPROTOCOL = 101010
    CTC = 102030
    CTCTEST = 102031
    CTCDEV = 102032
    TKO_HEKLA = 167009
    CAMPV2 = 325000
    HAP_TESTNET = 373737
    SCR_ALPHA = 534353
    OPEN_CAMPUS_CODEX = 656476
    PYROPE = 695569
    SHR = 1234567
    AZKTN = 1261120
    ZUUXCHAIN = 4284265
    AZKYT = 6038361
    HAP = 8794598
    FLUENCE = 9999999
    CELO_SEP = 11142220
    LUMMIO = 12020498
    STABILITYTESTNET = 20180427
    FLUENCE_TESTNET = 52164803
    REYA_CRONOS = 89346162
    NEONEVM_DEVNET = 245022926
    NEONEVM_MAINNET = 245022934
    ZEPHYR = 1417429182
    HST_TEST = 1570754601
    FLUENCE_STAGE = 123420000220
    SIVO_DEFI_TESTNET = 123420000586
    VOLMEX = 123420000588
    BASECAMP = 123420001114


# Chain registry - single source of truth for all blockchain networks
CHAINS: dict[int, ChainInfo] = {
    1: ChainInfo(
        chain_id=1,
        name='eth',
        display_name='Ethereum Mainnet',
        aliases=frozenset({'eth', 'eth-mainnet', 'ethereum', 'mainnet'}),
        native_currency='ETH',
        etherscan_network_name='main',
        etherscan_api_kind='eth',
        blockscout_instance='eth.blockscout.com',
        moralis_chain_id='0x1',
    ),
    3: ChainInfo(
        chain_id=3,
        name='rop',
        display_name='Ropsten',
        aliases=frozenset({'rop'}),
        native_currency='ETH',
        etherscan_network_name='ropsten',
        etherscan_api_kind='eth',
    ),
    4: ChainInfo(
        chain_id=4,
        name='rin',
        display_name='Rinkeby',
        aliases=frozenset({'rin'}),
        native_currency='ETH',
        etherscan_network_name='rinkeby',
        etherscan_api_kind='eth',
    ),
    5: ChainInfo(
        chain_id=5,
        name='gor',
        display_name='Goerli',
        aliases=frozenset({'gor'}),
        native_currency='ETH',
        testnet=True,
        etherscan_network_name='goerli',
        etherscan_api_kind='eth',
        blockscout_instance='eth-goerli.blockscout.com',
    ),
    10: ChainInfo(
        chain_id=10,
        name='oeth',
        display_name='OP Mainnet',
        aliases=frozenset({'oeth'}),
        native_currency='ETH',
        etherscan_network_name='optimistic',
        etherscan_api_kind='eth',
        blockscout_instance='optimism.blockscout.com',
        moralis_chain_id='0xa',
    ),
    30: ChainInfo(
        chain_id=30,
        name='rsk',
        display_name='Rootstock Mainnet',
        aliases=frozenset({'rsk'}),
        native_currency='RBTC',
        blockscout_instance='rootstock.blockscout.com',
    ),
    56: ChainInfo(
        chain_id=56,
        name='bnb',
        display_name='BNB Smart Chain Mainnet',
        aliases=frozenset({'binance', 'bnb', 'bnb-chain', 'bsc'}),
        native_currency='BNB',
        etherscan_network_name='main',
        etherscan_api_kind='bsc',
        moralis_chain_id='0x38',
    ),
    61: ChainInfo(
        chain_id=61,
        name='etc',
        display_name='Ethereum Classic',
        aliases=frozenset({'etc'}),
        native_currency='ETC',
        blockscout_instance='explorer-blockscout.etc-network.info',
    ),
    63: ChainInfo(
        chain_id=63,
        name='metc',
        display_name='Mordor Testnet',
        aliases=frozenset({'metc'}),
        native_currency='METC',
        testnet=True,
        blockscout_instance='etc-mordor.blockscout.com',
    ),
    69: ChainInfo(
        chain_id=69,
        name='okov',
        display_name='Optimism Kovan',
        aliases=frozenset({'okov'}),
        native_currency='ETH',
        etherscan_network_name='kovan-optimistic',
        etherscan_api_kind='eth',
    ),
    77: ChainInfo(
        chain_id=77,
        name='spoa',
        display_name='POA Network Sokol',
        aliases=frozenset({'spoa'}),
        native_currency='SPOA',
        blockscout_instance='blockscout.com/poa/sokol',
    ),
    97: ChainInfo(
        chain_id=97,
        name='bnbt',
        display_name='BNB Smart Chain Testnet',
        aliases=frozenset({'bnbt'}),
        native_currency='tBNB',
        testnet=True,
        etherscan_network_name='test',
        etherscan_api_kind='bsc',
    ),
    99: ChainInfo(
        chain_id=99,
        name='poa',
        display_name='POA Network Core',
        aliases=frozenset({'poa'}),
        native_currency='POA',
        blockscout_instance='blockscout.com/poa/core',
    ),
    100: ChainInfo(
        chain_id=100,
        name='gno',
        display_name='Gnosis',
        aliases=frozenset({'gno'}),
        native_currency='XDAI',
        etherscan_network_name='main',
        etherscan_api_kind='gnosis',
        blockscout_instance='gnosis.blockscout.com',
    ),
    130: ChainInfo(
        chain_id=130,
        name='unichain',
        display_name='Unichain',
        aliases=frozenset({'unichain'}),
        native_currency='ETH',
        blockscout_instance='unichain.blockscout.com',
    ),
    134: ChainInfo(
        chain_id=134,
        name='rlc',
        display_name='iExec Sidechain',
        aliases=frozenset({'rlc'}),
        native_currency='xRLC',
        blockscout_instance='blockscout.bellecour.iex.ec',
    ),
    137: ChainInfo(
        chain_id=137,
        name='pol',
        display_name='Polygon Mainnet',
        aliases=frozenset({'matic', 'pol', 'polygon', 'polygon-mainnet'}),
        native_currency='POL',
        etherscan_network_name='main',
        etherscan_api_kind='polygon',
        moralis_chain_id='0x89',
    ),
    138: ChainInfo(
        chain_id=138,
        name='dfio-meta-main',
        display_name='Defi Oracle Meta Mainnet',
        aliases=frozenset({'dfio-meta-main'}),
        native_currency='ETH',
        blockscout_instance='blockscout.defi-oracle.io',
    ),
    177: ChainInfo(
        chain_id=177,
        name='hsk',
        display_name='HashKey Chain',
        aliases=frozenset({'hsk'}),
        native_currency='HSK',
        blockscout_instance='hashkey.blockscout.com',
    ),
    200: ChainInfo(
        chain_id=200,
        name='aox',
        display_name='Arbitrum on xDai',
        aliases=frozenset({'aox'}),
        native_currency='xDAI',
        blockscout_instance='blockscout.com/xdai/arbitrum',
    ),
    227: ChainInfo(
        chain_id=227,
        name='prom',
        display_name='Prom',
        aliases=frozenset({'prom'}),
        native_currency='PROM',
        blockscout_instance='prom-blockscout.eu-north-2.gateway.fm',
    ),
    239: ChainInfo(
        chain_id=239,
        name='tacchain_239-1',
        display_name='TAC Mainnet',
        aliases=frozenset({'tacchain_239-1'}),
        native_currency='TAC',
        blockscout_instance='tac.blockscout.com',
    ),
    250: ChainInfo(
        chain_id=250,
        name='ftm',
        display_name='Fantom Opera',
        aliases=frozenset({'ftm'}),
        native_currency='FTM',
        etherscan_network_name='main',
        etherscan_api_kind='fantom',
        moralis_chain_id='0xfa',
    ),
    255: ChainInfo(
        chain_id=255,
        name='kroma',
        display_name='Kroma',
        aliases=frozenset({'kroma'}),
        native_currency='ETH',
        blockscout_instance='blockscout.kroma.network',
    ),
    336: ChainInfo(
        chain_id=336,
        name='sdn',
        display_name='Shiden',
        aliases=frozenset({'sdn'}),
        native_currency='SDN',
        blockscout_instance='blockscout.com/shiden',
    ),
    420: ChainInfo(
        chain_id=420,
        name='ogor',
        display_name='Optimism Goerli Testnet',
        aliases=frozenset({'ogor'}),
        native_currency='ETH',
        testnet=True,
        blockscout_instance='optimism-goerli.blockscout.com',
    ),
    592: ChainInfo(
        chain_id=592,
        name='astr',
        display_name='Astar',
        aliases=frozenset({'astr'}),
        native_currency='ASTR',
        blockscout_instance='blockscout.com/astar',
    ),
    595: ChainInfo(
        chain_id=595,
        name='maca',
        display_name='Acala Mandala Testnet TC9',
        aliases=frozenset({'maca'}),
        native_currency='mACA',
        testnet=True,
        blockscout_instance='blockscout.mandala.aca-staging.network',
    ),
    596: ChainInfo(
        chain_id=596,
        name='tkar',
        display_name='Karura Network Testnet',
        aliases=frozenset({'tkar'}),
        native_currency='KAR',
        testnet=True,
        blockscout_instance='blockscout.karura-testnet.aca-staging.network',
    ),
    597: ChainInfo(
        chain_id=597,
        name='taca',
        display_name='Acala Network Testnet',
        aliases=frozenset({'taca'}),
        native_currency='ACA',
        testnet=True,
        blockscout_instance='blockscout.acala-dev.aca-dev.network',
    ),
    686: ChainInfo(
        chain_id=686,
        name='kar',
        display_name='Karura Network',
        aliases=frozenset({'kar'}),
        native_currency='KAR',
        blockscout_instance='blockscout.karura.network',
    ),
    787: ChainInfo(
        chain_id=787,
        name='aca',
        display_name='Acala Network',
        aliases=frozenset({'aca'}),
        native_currency='ACA',
        blockscout_instance='blockscout.acala.network',
    ),
    919: ChainInfo(
        chain_id=919,
        name='modesep',
        display_name='Mode Testnet',
        aliases=frozenset({'modesep'}),
        native_currency='ETH',
        testnet=True,
        etherscan_network_name='test',
        etherscan_api_kind='mode',
    ),
    938: ChainInfo(
        chain_id=938,
        name='haust',
        display_name='Haust Mainnet',
        aliases=frozenset({'haust'}),
        native_currency='HAUST',
        blockscout_instance='haust-network-blockscout.eu-north-2.gateway.fm',
    ),
    1101: ChainInfo(
        chain_id=1101,
        name='zkevm',
        display_name='Polygon zkEVM',
        aliases=frozenset({'zkevm'}),
        native_currency='ETH',
        etherscan_network_name='zkevm',
        etherscan_api_kind='polygon',
    ),
    1135: ChainInfo(
        chain_id=1135,
        name='lisk',
        display_name='Lisk',
        aliases=frozenset({'lisk'}),
        native_currency='ETH',
        blockscout_instance='blockscout.lisk.com',
    ),
    1301: ChainInfo(
        chain_id=1301,
        name='unichain-sep',
        display_name='Unichain Sepolia Testnet',
        aliases=frozenset({'unichain-sep'}),
        native_currency='ETH',
        testnet=True,
        blockscout_instance='unichain-sepolia.blockscout.com',
    ),
    1338: ChainInfo(
        chain_id=1338,
        name='atl',
        display_name='Elysium Testnet',
        aliases=frozenset({'atl'}),
        native_currency='ELY',
        testnet=True,
        blockscout_instance='blockscout.atlantischain.network',
    ),
    1339: ChainInfo(
        chain_id=1339,
        name='ely',
        display_name='Elysium Mainnet',
        aliases=frozenset({'ely'}),
        native_currency='ELY',
        blockscout_instance='blockscout.elysiumchain.tech',
    ),
    1439: ChainInfo(
        chain_id=1439,
        name='injective-testnet',
        display_name='Injective Testnet',
        aliases=frozenset({'injective-testnet'}),
        native_currency='INJ',
        testnet=True,
        blockscout_instance='testnet.blockscout.injective.network',
    ),
    1776: ChainInfo(
        chain_id=1776,
        name='injective',
        display_name='Injective',
        aliases=frozenset({'injective'}),
        native_currency='INJ',
        blockscout_instance='blockscout.injective.network',
    ),
    1833: ChainInfo(
        chain_id=1833,
        name='verify-testnet',
        display_name='Verify testnet',
        aliases=frozenset({'verify-testnet'}),
        native_currency='MATIC',
        testnet=True,
        blockscout_instance='verify-testnet.blockscout.com',
    ),
    1868: ChainInfo(
        chain_id=1868,
        name='soneium',
        display_name='Soneium',
        aliases=frozenset({'soneium'}),
        native_currency='ETH',
        blockscout_instance='soneium.blockscout.com',
    ),
    1946: ChainInfo(
        chain_id=1946,
        name='soneium-minato',
        display_name='Soneium Testnet Minato',
        aliases=frozenset({'soneium-minato'}),
        native_currency='ETH',
        testnet=True,
        blockscout_instance='soneium-minato.blockscout.com',
    ),
    2340: ChainInfo(
        chain_id=2340,
        name='olym',
        display_name='Atleta Olympia',
        aliases=frozenset({'olym'}),
        native_currency='ATLA',
        blockscout_instance='blockscout.testnet-v2.atleta.network',
    ),
    2357: ChainInfo(
        chain_id=2357,
        name='deprecated-kroma-sepolia',
        display_name='(deprecated) Kroma Sepolia',
        aliases=frozenset({'deprecated-kroma-sepolia'}),
        native_currency='ETH',
        testnet=True,
        blockscout_instance='blockscout.sepolia-deprecated.kroma.network',
    ),
    2358: ChainInfo(
        chain_id=2358,
        name='kroma-sepolia',
        display_name='Kroma Sepolia',
        aliases=frozenset({'kroma-sepolia'}),
        native_currency='ETH',
        testnet=True,
        blockscout_instance='blockscout.sepolia.kroma.network',
    ),
    2440: ChainInfo(
        chain_id=2440,
        name='atla',
        display_name='Atleta Network',
        aliases=frozenset({'atla'}),
        native_currency='ATLA',
        blockscout_instance='blockscout.atleta.network',
    ),
    2442: ChainInfo(
        chain_id=2442,
        name='zkevm-testnet-cardona',
        display_name='Polygon zkEVM Cardona Testnet',
        aliases=frozenset({'zkevm-testnet-cardona'}),
        native_currency='ETH',
        testnet=True,
        etherscan_network_name='cardona-zkevm',
        etherscan_api_kind='polygon',
    ),
    2718: ChainInfo(
        chain_id=2718,
        name='k-laos',
        display_name='K-LAOS',
        aliases=frozenset({'k-laos'}),
        native_currency='KLAOS',
        blockscout_instance='blockscout.klaos.laosfoundation.io',
    ),
    4002: ChainInfo(
        chain_id=4002,
        name='tftm',
        display_name='Fantom Testnet',
        aliases=frozenset({'tftm'}),
        native_currency='FTM',
        testnet=True,
        etherscan_network_name='test',
        etherscan_api_kind='fantom',
    ),
    4202: ChainInfo(
        chain_id=4202,
        name='lisksep',
        display_name='Lisk Sepolia Testnet',
        aliases=frozenset({'lisksep'}),
        native_currency='ETH',
        testnet=True,
        blockscout_instance='sepolia-blockscout.lisk.com',
    ),
    4352: ChainInfo(
        chain_id=4352,
        name='m',
        display_name='MemeCore',
        aliases=frozenset({'m'}),
        native_currency='M',
        blockscout_instance='blockscout.memecore.com',
    ),
    5611: ChainInfo(
        chain_id=5611,
        name='obnbt',
        display_name='opBNB Testnet',
        aliases=frozenset({'obnbt'}),
        native_currency='tBNB',
        testnet=True,
        etherscan_network_name='test',
        etherscan_api_kind='bsc',
    ),
    5678: ChainInfo(
        chain_id=5678,
        name='tango',
        display_name='Tanssi Demo',
        aliases=frozenset({'tango'}),
        native_currency='TANGO',
        blockscout_instance='dancelight-2001-blockscout.tanssi-chains.network',
    ),
    6283: ChainInfo(
        chain_id=6283,
        name='laosnetwork',
        display_name='LAOS',
        aliases=frozenset({'laosnetwork'}),
        native_currency='LAOS',
        blockscout_instance='blockscout.laos.laosfoundation.io',
    ),
    6398: ChainInfo(
        chain_id=6398,
        name='connext-sepolia',
        display_name='Connext Sepolia',
        aliases=frozenset({'connext-sepolia'}),
        native_currency='ETH',
        testnet=True,
        blockscout_instance='connext-sepolia.blockscout.com',
    ),
    7001: ChainInfo(
        chain_id=7001,
        name='zetachain-testnet',
        display_name='ZetaChain Testnet',
        aliases=frozenset({'zetachain-testnet'}),
        native_currency='ZETA',
        testnet=True,
        blockscout_instance='zetachain-athens-3.blockscout.com',
    ),
    8428: ChainInfo(
        chain_id=8428,
        name='that',
        display_name='THAT Mainnet',
        aliases=frozenset({'that'}),
        native_currency='THAT',
        blockscout_instance='that.blockscout.com',
    ),
    8453: ChainInfo(
        chain_id=8453,
        name='base',
        display_name='Base',
        aliases=frozenset({'base'}),
        native_currency='ETH',
        etherscan_network_name='main',
        etherscan_api_kind='base',
        blockscout_instance='base.blockscout.com',
        moralis_chain_id='0x2105',
    ),
    10200: ChainInfo(
        chain_id=10200,
        name='chi',
        display_name='Gnosis Chiado Testnet',
        aliases=frozenset({'chi'}),
        native_currency='XDAI',
        testnet=True,
        blockscout_instance='gnosis-chiado.blockscout.com',
    ),
    16182: ChainInfo(
        chain_id=16182,
        name='eventum-testnet',
        display_name='Eventum Testnet',
        aliases=frozenset({'eventum-testnet'}),
        native_currency='ETH',
        testnet=True,
        blockscout_instance='testnet-blockscout.eh-dev.app',
    ),
    17000: ChainInfo(
        chain_id=17000,
        name='holesky',
        display_name='Holesky',
        aliases=frozenset({'holesky'}),
        native_currency='ETH',
        testnet=True,
        etherscan_network_name='holesky',
        etherscan_api_kind='eth',
    ),
    18231: ChainInfo(
        chain_id=18231,
        name='unreal-old',
        display_name='unreal-old',
        aliases=frozenset({'unreal-old'}),
        native_currency='ETH',
        blockscout_instance='unreal.blockscout.com',
    ),
    18233: ChainInfo(
        chain_id=18233,
        name='unreal',
        display_name='unreal',
        aliases=frozenset({'unreal'}),
        native_currency='reETH',
        blockscout_instance='unreal.blockscout.com',
    ),
    18880: ChainInfo(
        chain_id=18880,
        name='expchain',
        display_name='EXPchain Testnet',
        aliases=frozenset({'expchain'}),
        native_currency='tZKJ',
        testnet=True,
        blockscout_instance='blockscout-testnet.expchain.ai',
    ),
    19546: ChainInfo(
        chain_id=19546,
        name='zytron-linea-testnet',
        display_name='Zytron Linea Testnet',
        aliases=frozenset({'zytron-linea-testnet'}),
        native_currency='ETH',
        testnet=True,
        blockscout_instance='linea-testnet-zytron-blockscout.zypher.game',
    ),
    20993: ChainInfo(
        chain_id=20993,
        name='fluent-dev-net',
        display_name='Fluent Developer Preview',
        aliases=frozenset({'fluent-dev-net'}),
        native_currency='ETH',
        blockscout_instance='blockscout.dev.gblend.xyz',
    ),
    27181: ChainInfo(
        chain_id=27181,
        name='klaosnova',
        display_name='KLAOS Nova',
        aliases=frozenset({'klaosnova'}),
        native_currency='KLAOS',
        blockscout_instance='blockscout.klaosnova.laosfoundation.io',
    ),
    28528: ChainInfo(
        chain_id=28528,
        name='obgor',
        display_name='Optimism Bedrock (Goerli Alpha Testnet)',
        aliases=frozenset({'obgor'}),
        native_currency='ETH',
        testnet=True,
        blockscout_instance='blockscout.com/optimism/bedrock-alpha',
    ),
    31415: ChainInfo(
        chain_id=31415,
        name='wpay',
        display_name='Wirex Pay Mainnet',
        aliases=frozenset({'wpay'}),
        native_currency='ETH',
        blockscout_instance='blockscout.wirexpaychain.com',
    ),
    32769: ChainInfo(
        chain_id=32769,
        name='zil',
        display_name='Zilliqa 2',
        aliases=frozenset({'zil'}),
        native_currency='ZIL',
        blockscout_instance='zilliqa.blockscout.com',
    ),
    33101: ChainInfo(
        chain_id=33101,
        name='zil-testnet',
        display_name='Zilliqa 2 Testnet',
        aliases=frozenset({'zil-testnet'}),
        native_currency='ZIL',
        testnet=True,
        blockscout_instance='testnet.zilliqa.blockscout.com',
    ),
    34443: ChainInfo(
        chain_id=34443,
        name='mode',
        display_name='Mode',
        aliases=frozenset({'mode'}),
        native_currency='ETH',
        etherscan_network_name='main',
        etherscan_api_kind='mode',
    ),
    41923: ChainInfo(
        chain_id=41923,
        name='edu-chain',
        display_name='EDU Chain',
        aliases=frozenset({'edu-chain'}),
        native_currency='EDU',
        blockscout_instance='educhain.blockscout.com',
    ),
    42161: ChainInfo(
        chain_id=42161,
        name='arb1',
        display_name='Arbitrum One',
        aliases=frozenset({'arb1'}),
        native_currency='ETH',
        etherscan_network_name='main',
        etherscan_api_kind='arbitrum',
        moralis_chain_id='0xa4b1',
    ),
    42220: ChainInfo(
        chain_id=42220,
        name='celo',
        display_name='Celo Mainnet',
        aliases=frozenset({'celo'}),
        native_currency='CELO',
        blockscout_instance='celo.blockscout.com',
    ),
    43113: ChainInfo(
        chain_id=43113,
        name='fuji',
        display_name='Avalanche Fuji Testnet',
        aliases=frozenset({'fuji'}),
        native_currency='AVAX',
        testnet=True,
        etherscan_network_name='test',
        etherscan_api_kind='avalanche',
    ),
    43114: ChainInfo(
        chain_id=43114,
        name='avax',
        display_name='Avalanche C-Chain',
        aliases=frozenset({'avax'}),
        native_currency='AVAX',
        etherscan_network_name='main',
        etherscan_api_kind='avalanche',
        moralis_chain_id='0xa86a',
    ),
    43521: ChainInfo(
        chain_id=43521,
        name='form',
        display_name='Formicarium',
        aliases=frozenset({'form'}),
        native_currency='M',
        blockscout_instance='formicarium.blockscout.memecore.com',
    ),
    50342: ChainInfo(
        chain_id=50342,
        name='reddio',
        display_name='Reddio',
        aliases=frozenset({'reddio'}),
        native_currency='RDO',
        blockscout_instance='reddio.cloud.blockscout.com',
    ),
    59140: ChainInfo(
        chain_id=59140,
        name='linea-goerli',
        display_name='Linea Goerli',
        aliases=frozenset({'linea-goerli'}),
        native_currency='ETH',
        testnet=True,
        etherscan_network_name='goerli',
        etherscan_api_kind='linea',
    ),
    59141: ChainInfo(
        chain_id=59141,
        name='linea-sepolia',
        display_name='Linea Sepolia',
        aliases=frozenset({'linea-sepolia'}),
        native_currency='ETH',
        testnet=True,
        etherscan_network_name='sepolia',
        etherscan_api_kind='linea',
    ),
    59144: ChainInfo(
        chain_id=59144,
        name='linea',
        display_name='Linea',
        aliases=frozenset({'linea'}),
        native_currency='ETH',
        etherscan_network_name='main',
        etherscan_api_kind='linea',
        moralis_chain_id='0xe708',
    ),
    78281: ChainInfo(
        chain_id=78281,
        name='dfly',
        display_name='Dragonfly Mainnet (Hexapod)',
        aliases=frozenset({'dfly'}),
        native_currency='DFLY',
        blockscout_instance='blockscout.dragonfly.hexapod.network',
    ),
    80001: ChainInfo(
        chain_id=80001,
        name='maticmum',
        display_name='Mumbai',
        aliases=frozenset({'maticmum'}),
        native_currency='MATIC',
        testnet=True,
        etherscan_network_name='mumbai',
        etherscan_api_kind='polygon',
    ),
    80002: ChainInfo(
        chain_id=80002,
        name='polygonamoy',
        display_name='Amoy',
        aliases=frozenset({'polygonamoy'}),
        native_currency='POL',
        testnet=True,
        etherscan_network_name='amoy',
        etherscan_api_kind='polygon',
    ),
    81457: ChainInfo(
        chain_id=81457,
        name='blastmainnet',
        display_name='Blast',
        aliases=frozenset({'blastmainnet'}),
        native_currency='ETH',
        etherscan_network_name='main',
        etherscan_api_kind='blast',
    ),
    84531: ChainInfo(
        chain_id=84531,
        name='basegor',
        display_name='Base Goerli Testnet',
        aliases=frozenset({'basegor'}),
        native_currency='ETH',
        testnet=True,
        etherscan_network_name='goerli',
        etherscan_api_kind='base',
        blockscout_instance='base-goerli.blockscout.com',
    ),
    84532: ChainInfo(
        chain_id=84532,
        name='basesep',
        display_name='Base Sepolia Testnet',
        aliases=frozenset({'basesep'}),
        native_currency='ETH',
        testnet=True,
        etherscan_network_name='sepolia',
        etherscan_api_kind='base',
        blockscout_instance='base-sepolia.blockscout.com',
    ),
    96970: ChainInfo(
        chain_id=96970,
        name='mantis',
        display_name='Mantis Testnet (Hexapod)',
        aliases=frozenset({'mantis'}),
        native_currency='MANTIS',
        testnet=True,
        blockscout_instance='blockscout.mantis.hexapod.network',
    ),
    101010: ChainInfo(
        chain_id=101010,
        name='stabilityprotocol',
        display_name='Global Trust Network',
        aliases=frozenset({'stabilityprotocol'}),
        native_currency='FREE',
        blockscout_instance='stability.blockscout.com',
    ),
    102030: ChainInfo(
        chain_id=102030,
        name='ctc',
        display_name='Creditcoin',
        aliases=frozenset({'ctc'}),
        native_currency='CTC',
        blockscout_instance='creditcoin.blockscout.com',
    ),
    102031: ChainInfo(
        chain_id=102031,
        name='ctctest',
        display_name='Creditcoin Testnet',
        aliases=frozenset({'ctctest'}),
        native_currency='tCTC',
        testnet=True,
        blockscout_instance='creditcoin-testnet.blockscout.com',
    ),
    102032: ChainInfo(
        chain_id=102032,
        name='ctcdev',
        display_name='Creditcoin Devnet',
        aliases=frozenset({'ctcdev'}),
        native_currency='devCTC',
        blockscout_instance='creditcoin-devnet.blockscout.com',
    ),
    167009: ChainInfo(
        chain_id=167009,
        name='tko-hekla',
        display_name='Taiko Hekla',
        aliases=frozenset({'tko-hekla'}),
        native_currency='ETH',
        blockscout_instance='blockscoutapi.hekla.taiko.xyz',
    ),
    325000: ChainInfo(
        chain_id=325000,
        name='campv2',
        display_name='Camp Network Testnet V2',
        aliases=frozenset({'campv2'}),
        native_currency='ETH',
        testnet=True,
        blockscout_instance='camp-network-testnet.blockscout.com',
    ),
    373737: ChainInfo(
        chain_id=373737,
        name='hap-testnet',
        display_name='HAPchain Testnet',
        aliases=frozenset({'hap-testnet'}),
        native_currency='HAP',
        testnet=True,
        blockscout_instance='blockscout-test.hap.land',
    ),
    421611: ChainInfo(
        chain_id=421611,
        name='arb-rinkeby',
        display_name='Arbitrum Rinkeby',
        aliases=frozenset({'arb-rinkeby'}),
        native_currency='ETH',
        etherscan_network_name='test',
        etherscan_api_kind='arbitrum',
    ),
    421613: ChainInfo(
        chain_id=421613,
        name='arb-goerli',
        display_name='Arbitrum Goerli',
        aliases=frozenset({'arb-goerli'}),
        native_currency='AGOR',
        testnet=True,
        etherscan_network_name='goerli',
        etherscan_api_kind='arbitrum',
    ),
    421614: ChainInfo(
        chain_id=421614,
        name='arb-sep',
        display_name='Arbitrum Sepolia',
        aliases=frozenset({'arb-sep'}),
        native_currency='ETH',
        testnet=True,
        etherscan_network_name='sepolia',
        etherscan_api_kind='arbitrum',
    ),
    534351: ChainInfo(
        chain_id=534351,
        name='scr-sepolia',
        display_name='Scroll Sepolia Testnet',
        aliases=frozenset({'scr-sepolia'}),
        native_currency='ETH',
        testnet=True,
        etherscan_network_name='sepolia',
        etherscan_api_kind='scroll',
    ),
    534352: ChainInfo(
        chain_id=534352,
        name='scr',
        display_name='Scroll',
        aliases=frozenset({'scr'}),
        native_currency='ETH',
        etherscan_network_name='main',
        etherscan_api_kind='scroll',
    ),
    534353: ChainInfo(
        chain_id=534353,
        name='scr-alpha',
        display_name='Scroll Alpha Testnet',
        aliases=frozenset({'scr-alpha'}),
        native_currency='ETH',
        testnet=True,
        blockscout_instance='alpha-blockscout.scroll.io',
    ),
    656476: ChainInfo(
        chain_id=656476,
        name='open-campus-codex',
        display_name='EDU Chain Testnet',
        aliases=frozenset({'open-campus-codex'}),
        native_currency='EDU',
        testnet=True,
        blockscout_instance='edu-chain-testnet.blockscout.com',
    ),
    695569: ChainInfo(
        chain_id=695569,
        name='pyrope',
        display_name='Pyrope Testnet',
        aliases=frozenset({'pyrope'}),
        native_currency='ETH',
        testnet=True,
        blockscout_instance='pyrope.blockscout.com',
    ),
    1234567: ChainInfo(
        chain_id=1234567,
        name='shr',
        display_name='Sharecle Mainnet',
        aliases=frozenset({'shr'}),
        native_currency='SHR',
        etherscan_network_name='main',
        etherscan_api_kind='eth',
    ),
    1261120: ChainInfo(
        chain_id=1261120,
        name='azktn',
        display_name='zKatana',
        aliases=frozenset({'azktn'}),
        native_currency='ETH',
        blockscout_instance='zkatana.blockscout.com',
    ),
    4284265: ChainInfo(
        chain_id=4284265,
        name='zuuxchain',
        display_name='Zuux chain testnet',
        aliases=frozenset({'zuuxchain'}),
        native_currency='ZUUX',
        testnet=True,
        blockscout_instance='blockscout.zuux.network',
    ),
    6038361: ChainInfo(
        chain_id=6038361,
        name='azkyt',
        display_name='Astar zKyoto',
        aliases=frozenset({'azkyt'}),
        native_currency='ETH',
        blockscout_instance='astar-zkyoto.blockscout.com',
    ),
    8794598: ChainInfo(
        chain_id=8794598,
        name='hap',
        display_name='HAPchain',
        aliases=frozenset({'hap'}),
        native_currency='HAP',
        blockscout_instance='blockscout.hap.land',
    ),
    9999999: ChainInfo(
        chain_id=9999999,
        name='fluence',
        display_name='Fluence',
        aliases=frozenset({'fluence'}),
        native_currency='FLT',
        blockscout_instance='blockscout.mainnet.fluence.dev',
    ),
    11142220: ChainInfo(
        chain_id=11142220,
        name='celo-sep',
        display_name='Celo Sepolia Testnet',
        aliases=frozenset({'celo-sep'}),
        native_currency='CELO',
        testnet=True,
        blockscout_instance='celo-sepolia.blockscout.com',
    ),
    11155111: ChainInfo(
        chain_id=11155111,
        name='sep',
        display_name='Ethereum Sepolia',
        aliases=frozenset({'sep'}),
        native_currency='ETH',
        testnet=True,
        etherscan_network_name='sepolia',
        etherscan_api_kind='eth',
        moralis_chain_id='0xaa36a7',
    ),
    11155420: ChainInfo(
        chain_id=11155420,
        name='opsep',
        display_name='OP Sepolia Testnet',
        aliases=frozenset({'opsep'}),
        native_currency='ETH',
        testnet=True,
        etherscan_network_name='sepolia',
        etherscan_api_kind='eth',
        blockscout_instance='optimism-sepolia.blockscout.com',
    ),
    12020498: ChainInfo(
        chain_id=12020498,
        name='lummio',
        display_name='Lummio Network',
        aliases=frozenset({'lummio'}),
        native_currency='LRPO',
        blockscout_instance='blockscout.lummio.net',
    ),
    20180427: ChainInfo(
        chain_id=20180427,
        name='stabilitytestnet',
        display_name='Stability Testnet',
        aliases=frozenset({'stabilitytestnet'}),
        native_currency='FREE',
        testnet=True,
        blockscout_instance='stability-testnet.blockscout.com',
    ),
    52164803: ChainInfo(
        chain_id=52164803,
        name='fluence-testnet',
        display_name='Fluence Testnet',
        aliases=frozenset({'fluence-testnet'}),
        native_currency='tFLT',
        testnet=True,
        blockscout_instance='blockscout.testnet.fluence.dev',
    ),
    89346162: ChainInfo(
        chain_id=89346162,
        name='reya-cronos',
        display_name='Reya Cronos',
        aliases=frozenset({'reya-cronos'}),
        native_currency='ETH',
        blockscout_instance='reya-cronos.blockscout.com',
    ),
    168587773: ChainInfo(
        chain_id=168587773,
        name='blastsepolia',
        display_name='Blast Sepolia Testnet',
        aliases=frozenset({'blastsepolia'}),
        native_currency='ETH',
        testnet=True,
        etherscan_network_name='test',
        etherscan_api_kind='blast',
    ),
    245022926: ChainInfo(
        chain_id=245022926,
        name='neonevm-devnet',
        display_name='Neon EVM Devnet',
        aliases=frozenset({'neonevm-devnet'}),
        native_currency='NEON',
        blockscout_instance='neon-devnet.blockscout.com',
    ),
    245022934: ChainInfo(
        chain_id=245022934,
        name='neonevm-mainnet',
        display_name='Neon EVM Mainnet',
        aliases=frozenset({'neonevm-mainnet'}),
        native_currency='NEON',
        blockscout_instance='neon.blockscout.com',
    ),
    1417429182: ChainInfo(
        chain_id=1417429182,
        name='zephyr',
        display_name='Zephyr Testnet',
        aliases=frozenset({'zephyr'}),
        native_currency='Z',
        testnet=True,
        blockscout_instance='zephyr-blockscout.eu-north-2.gateway.fm',
    ),
    1570754601: ChainInfo(
        chain_id=1570754601,
        name='hst-test',
        display_name='Haust Testnet',
        aliases=frozenset({'hst-test'}),
        native_currency='HAUST',
        testnet=True,
        blockscout_instance='haust-testnet-blockscout.eu-north-2.gateway.fm',
    ),
    123420000220: ChainInfo(
        chain_id=123420000220,
        name='fluence-stage',
        display_name='Fluence Stage',
        aliases=frozenset({'fluence-stage'}),
        native_currency='tFLT',
        blockscout_instance='blockscout.stage.fluence.dev',
    ),
    123420000586: ChainInfo(
        chain_id=123420000586,
        name='sivo-defi-testnet',
        display_name='sivo-defi-testnet',
        aliases=frozenset({'sivo-defi-testnet'}),
        native_currency='ETH',
        testnet=True,
        blockscout_instance='sivo-defi-testnet.cloud.blockscout.com',
    ),
    123420000588: ChainInfo(
        chain_id=123420000588,
        name='volmex',
        display_name='volmex',
        aliases=frozenset({'volmex'}),
        native_currency='ETH',
        blockscout_instance='volmex.cloud.blockscout.com',
    ),
    123420001114: ChainInfo(
        chain_id=123420001114,
        name='basecamp',
        display_name='Basecamp',
        aliases=frozenset({'basecamp'}),
        native_currency='CAMP',
        blockscout_instance='basecamp.cloud.blockscout.com',
    ),
}


def resolve_chain(identifier: int | str | Chain) -> ChainInfo:
    """
    Resolve chain identifier to ChainInfo.

    Args:
        identifier: Chain ID (int), name (str), alias (str), or Chain enum

    Returns:
        ChainInfo for the requested chain

    Raises:
        ValueError: If chain is not found

    Examples:
        >>> resolve_chain(1)  # By chain ID
        ChainInfo(chain_id=1, name='ethereum', ...)

        >>> resolve_chain('ethereum')  # By canonical name
        ChainInfo(chain_id=1, name='ethereum', ...)

        >>> resolve_chain('eth')  # By alias
        ChainInfo(chain_id=1, name='ethereum', ...)

        >>> resolve_chain(Chain.ETHEREUM)  # By enum
        ChainInfo(chain_id=1, name='ethereum', ...)
    """
    # Handle Chain enum
    if isinstance(identifier, Chain):
        identifier = identifier.value

    # Handle chain ID
    if isinstance(identifier, int):
        if identifier not in CHAINS:
            available = ', '.join(f'{c.name} ({c.chain_id})' for c in CHAINS.values())
            raise ValueError(f'Unknown chain ID: {identifier}. Available chains: {available}')
        return CHAINS[identifier]

    # Handle string (name or alias)
    if isinstance(identifier, str):
        identifier_lower = identifier.lower().strip()

        # Try exact name match first
        for chain in CHAINS.values():
            if chain.name == identifier_lower:
                return chain

        # Try alias match
        for chain in CHAINS.values():
            if identifier_lower in chain.aliases:
                return chain

        # Build helpful error message
        available_names = sorted({c.name for c in CHAINS.values()})
        raise ValueError(
            f"Unknown chain: '{identifier}'. Available chains: {', '.join(available_names)}"
        )

    raise TypeError(
        f'Invalid chain identifier type: {type(identifier).__name__}. Expected int, str, or Chain enum'
    )


def list_chains(
    provider: str | None = None,
    testnet: bool | None = None,
) -> list[ChainInfo]:
    """
    List all supported chains, optionally filtered.

    Args:
        provider: Filter by provider ('etherscan', 'blockscout', 'moralis')
        testnet: Filter by testnet status (True=testnets only, False=mainnets only, None=all)

    Returns:
        List of ChainInfo objects matching filters

    Examples:
        >>> list_chains()  # All chains
        [ChainInfo(...), ...]

        >>> list_chains(provider='blockscout')  # Only chains with BlockScout
        [ChainInfo(...), ...]

        >>> list_chains(testnet=False)  # Only mainnets
        [ChainInfo(...), ...]
    """
    chains = list(CHAINS.values())

    # Filter by provider
    if provider:
        provider_lower = provider.lower()
        if provider_lower == 'etherscan':
            chains = [c for c in chains if c.etherscan_api_kind is not None]
        elif provider_lower == 'blockscout':
            chains = [c for c in chains if c.blockscout_instance is not None]
        elif provider_lower == 'moralis':
            chains = [c for c in chains if c.moralis_chain_id is not None]
        else:
            raise ValueError(
                f"Unknown provider: '{provider}'. Supported: etherscan, blockscout, moralis"
            )

    # Filter by testnet status
    if testnet is not None:
        chains = [c for c in chains if c.testnet == testnet]

    return sorted(chains, key=lambda c: c.chain_id)


def get_env_api_key(provider: str) -> str | None:
    """
    Get API key from environment variables for a provider.

    Args:
        provider: Provider name ('etherscan', 'moralis', etc.)

    Returns:
        API key or None if not found

    Examples:
        >>> get_env_api_key('etherscan')
        'YOUR_API_KEY' or None
    """
    provider_upper = provider.upper()

    # Try various environment variable patterns
    env_vars = [
        f'{provider_upper}_API_KEY',
        f'{provider_upper}_KEY',
        f'{provider_upper}SCAN_KEY',  # For etherscan, bscscan, etc.
    ]

    # Special case for Moralis
    if provider.lower() == 'moralis':
        env_vars.insert(0, 'MORALIS_API_KEY')

    for var in env_vars:
        value = os.getenv(var)
        if value:
            return value

    return None


__all__ = [
    'Chain',
    'ChainInfo',
    'CHAINS',
    'resolve_chain',
    'list_chains',
    'get_env_api_key',
]
